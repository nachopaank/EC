   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../gpio.c     **** #include "44b.h"
   2:../gpio.c     **** #include "gpio.h"
   3:../gpio.c     **** 
   4:../gpio.c     **** /* Port B interface implementation */
   5:../gpio.c     **** 
   6:../gpio.c     **** int portB_conf(int pin, enum port_mode mode)
   7:../gpio.c     **** {
 1703              		.loc 1 7 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
   8:../gpio.c     **** 	int ret = 0;
 1722              		.loc 1 8 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
   9:../gpio.c     **** 		if (pin < 0 || pin > 10)
 1725              		.loc 1 9 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 9 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
  10:../gpio.c     **** 			return -1; // indica error
 1734              		.loc 1 10 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  11:../gpio.c     **** 
  12:../gpio.c     **** 		if (mode == SIGOUT)
 1738              		.loc 1 12 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  13:../gpio.c     **** 			rPCONB |= (0x1 << pin);
 1742              		.loc 1 13 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  14:../gpio.c     **** 			// COMPLETAR: poner en rPCONB el bit indicado por pin a 1 para que por
  15:../gpio.c     **** 			// dicho pin en el puerto B salga la seÃ±al correspondiente del
  16:../gpio.c     **** 			// controlador de memoria
  17:../gpio.c     **** 		else if (mode == OUTPUT)
 1753              		.loc 1 17 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  18:../gpio.c     **** 			rPCONB &= ~(0x1 << pin);
 1757              		.loc 1 18 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  19:../gpio.c     **** 			// COMPLETAR: poner en rPCONB el bit indicado por pin a 0 para que dicho
  20:../gpio.c     **** 			// pin sea un pin de salida
  21:../gpio.c     **** 		else
  22:../gpio.c     **** 			ret = -1; // indica error
 1769              		.loc 1 22 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  23:../gpio.c     **** 
  24:../gpio.c     **** 		return ret;
 1773              		.loc 1 24 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  25:../gpio.c     **** }
 1776              		.loc 1 25 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  26:../gpio.c     **** 
  27:../gpio.c     **** int portB_write(int pin, enum digital val)
  28:../gpio.c     **** {
 1793              		.loc 1 28 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  29:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 29 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 29 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  30:../gpio.c     **** 			return -1; // indica error
 1821              		.loc 1 30 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  31:../gpio.c     **** 
  32:../gpio.c     **** 		if (val < 0 || val > 1)
 1825              		.loc 1 32 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  33:../gpio.c     **** 			return -1; // indica error
 1829              		.loc 1 33 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  34:../gpio.c     **** 
  35:../gpio.c     **** 		if (val)
 1833              		.loc 1 35 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  36:../gpio.c     **** 			// COMPLETAR: poner en rPDATB el bit indicado por pin a 1
  37:../gpio.c     **** 			rPDATB |= (0x1 << pin);
 1837              		.loc 1 37 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  38:../gpio.c     **** 		else
  39:../gpio.c     **** 			// COMPLETAR: poner en rPDATB el bit indicado por pin a 0
  40:../gpio.c     **** 			rPDATB &= ~(0x1 << pin);
 1848              		.loc 1 40 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022001E0 		and	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  41:../gpio.c     **** 
  42:../gpio.c     **** 		return 0;
 1859              		.loc 1 42 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  43:../gpio.c     **** }
 1862              		.loc 1 43 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  44:../gpio.c     **** 
  45:../gpio.c     **** /* Port G interface implementation */
  46:../gpio.c     **** 
  47:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  48:../gpio.c     **** {
 1879              		.loc 1 48 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  49:../gpio.c     **** 	int pos  = pin*2;
 1898              		.loc 1 49 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  50:../gpio.c     **** 
  51:../gpio.c     **** 		if (pin < 0 || pin > 7)
 1902              		.loc 1 51 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 51 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  52:../gpio.c     **** 			return -1; // indica error
 1911              		.loc 1 52 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 410000EA 		b	.L22
 1914              	.L21:
  53:../gpio.c     **** 
  54:../gpio.c     **** 		switch (mode) {
 1915              		.loc 1 54 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 3A0000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 14020000 		.word	.L25
 1923 01e4 5C020000 		.word	.L26
 1924 01e8 A4020000 		.word	.L27
 1925              	.L24:
  55:../gpio.c     **** 			case INPUT:
  56:../gpio.c     **** 					rPCONG &= ~(0x3 << pos);
 1926              		.loc 1 56 0
 1927 01ec F0309FE5 		ldr	r3, .L30
 1928 01f0 EC209FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0300A0E3 		mov	r0, #3
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  57:../gpio.c     **** 				// COMPLETAR: poner en rPCONG 00 a partir de la posiciÃ³n pos para
  58:../gpio.c     **** 				// configurar como pin de entrada el pin indicado por el parÃ¡metro pin
  59:../gpio.c     **** 				break;
 1936              		.loc 1 59 0
 1937 0210 2E0000EA 		b	.L29
 1938              	.L25:
  60:../gpio.c     **** 			case OUTPUT:
  61:../gpio.c     **** 				rPCONG &= ~(0x3 << pos);
 1939              		.loc 1 61 0
 1940 0214 C8309FE5 		ldr	r3, .L30
 1941 0218 C4209FE5 		ldr	r2, .L30
 1942 021c 001092E5 		ldr	r1, [r2, #0]
 1943 0220 0300A0E3 		mov	r0, #3
 1944 0224 10201BE5 		ldr	r2, [fp, #-16]
 1945 0228 1022A0E1 		mov	r2, r0, asl r2
 1946 022c 0220E0E1 		mvn	r2, r2
 1947 0230 022001E0 		and	r2, r1, r2
 1948 0234 002083E5 		str	r2, [r3, #0]
  62:../gpio.c     **** 				rPCONG |= (0x1 << pos);
 1949              		.loc 1 62 0
 1950 0238 A4309FE5 		ldr	r3, .L30
 1951 023c A0209FE5 		ldr	r2, .L30
 1952 0240 001092E5 		ldr	r1, [r2, #0]
 1953 0244 0100A0E3 		mov	r0, #1
 1954 0248 10201BE5 		ldr	r2, [fp, #-16]
 1955 024c 1022A0E1 		mov	r2, r0, asl r2
 1956 0250 022081E1 		orr	r2, r1, r2
 1957 0254 002083E5 		str	r2, [r3, #0]
  63:../gpio.c     **** 				// COMPLETAR: poner en rPCONG 01 a partir de la posiciÃ³n pos para
  64:../gpio.c     **** 				// configurar como pin de salida el pin indicado por el parÃ¡metro pin
  65:../gpio.c     **** 				break;
 1958              		.loc 1 65 0
 1959 0258 1C0000EA 		b	.L29
 1960              	.L26:
  66:../gpio.c     **** 			case SIGOUT:
  67:../gpio.c     **** 				rPCONG &= ~(0x3 << pos);
 1961              		.loc 1 67 0
 1962 025c 80309FE5 		ldr	r3, .L30
 1963 0260 7C209FE5 		ldr	r2, .L30
 1964 0264 001092E5 		ldr	r1, [r2, #0]
 1965 0268 0300A0E3 		mov	r0, #3
 1966 026c 10201BE5 		ldr	r2, [fp, #-16]
 1967 0270 1022A0E1 		mov	r2, r0, asl r2
 1968 0274 0220E0E1 		mvn	r2, r2
 1969 0278 022001E0 		and	r2, r1, r2
 1970 027c 002083E5 		str	r2, [r3, #0]
  68:../gpio.c     **** 				rPCONG |= (0x2 << pos);
 1971              		.loc 1 68 0
 1972 0280 5C309FE5 		ldr	r3, .L30
 1973 0284 58209FE5 		ldr	r2, .L30
 1974 0288 001092E5 		ldr	r1, [r2, #0]
 1975 028c 0200A0E3 		mov	r0, #2
 1976 0290 10201BE5 		ldr	r2, [fp, #-16]
 1977 0294 1022A0E1 		mov	r2, r0, asl r2
 1978 0298 022081E1 		orr	r2, r1, r2
 1979 029c 002083E5 		str	r2, [r3, #0]
  69:../gpio.c     **** 				// COMPLETAR: poner en rPCONG 10 a partir de la posiciÃ³n pos para
  70:../gpio.c     **** 				// que salga la seÃ±al interna correspondiente por el pin indicado
  71:../gpio.c     **** 				// por el parÃ¡metro pin
  72:../gpio.c     **** 				break;
 1980              		.loc 1 72 0
 1981 02a0 0A0000EA 		b	.L29
 1982              	.L27:
  73:../gpio.c     **** 			case EINT:
  74:../gpio.c     **** 				rPCONG |= (0x3 << pos);
 1983              		.loc 1 74 0
 1984 02a4 38309FE5 		ldr	r3, .L30
 1985 02a8 34209FE5 		ldr	r2, .L30
 1986 02ac 001092E5 		ldr	r1, [r2, #0]
 1987 02b0 0300A0E3 		mov	r0, #3
 1988 02b4 10201BE5 		ldr	r2, [fp, #-16]
 1989 02b8 1022A0E1 		mov	r2, r0, asl r2
 1990 02bc 022081E1 		orr	r2, r1, r2
 1991 02c0 002083E5 		str	r2, [r3, #0]
  75:../gpio.c     **** 				// COMPLETAR: poner en rPCONG 11 a partir de la posiciÃ³n pos para
  76:../gpio.c     **** 				// habilitar la generaciÃ³n de interrupciones externas por el pin
  77:../gpio.c     **** 				// indicado por el parÃ¡metro pin
  78:../gpio.c     **** 				break;
 1992              		.loc 1 78 0
 1993 02c4 010000EA 		b	.L29
 1994              	.L23:
  79:../gpio.c     **** 			default:
  80:../gpio.c     **** 				return -1;
 1995              		.loc 1 80 0
 1996 02c8 0030E0E3 		mvn	r3, #0
 1997 02cc 000000EA 		b	.L22
 1998              	.L29:
  81:../gpio.c     **** 		}
  82:../gpio.c     **** 
  83:../gpio.c     **** 		return 0;
 1999              		.loc 1 83 0
 2000 02d0 0030A0E3 		mov	r3, #0
 2001              	.L22:
  84:../gpio.c     **** }
 2002              		.loc 1 84 0
 2003 02d4 0300A0E1 		mov	r0, r3
 2004 02d8 0CD04BE2 		sub	sp, fp, #12
 2005 02dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2006 02e0 1EFF2FE1 		bx	lr
 2007              	.L31:
 2008              		.align	2
 2009              	.L30:
 2010 02e4 4000D201 		.word	30539840
 2011              		.cfi_endproc
 2012              	.LFE2:
 2014              		.align	2
 2015              		.global	portG_eint_trig
 2017              	portG_eint_trig:
 2018              	.LFB3:
  85:../gpio.c     **** 
  86:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig)
  87:../gpio.c     **** {
 2019              		.loc 1 87 0
 2020              		.cfi_startproc
 2021              		@ Function supports interworking.
 2022              		@ args = 0, pretend = 0, frame = 16
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024 02e8 0DC0A0E1 		mov	ip, sp
 2025              	.LCFI6:
 2026              		.cfi_def_cfa_register 12
 2027 02ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2028 02f0 04B04CE2 		sub	fp, ip, #4
 2029              		.cfi_offset 14, -8
 2030              		.cfi_offset 13, -12
 2031              		.cfi_offset 11, -16
 2032              	.LCFI7:
 2033              		.cfi_def_cfa 11, 4
 2034 02f4 10D04DE2 		sub	sp, sp, #16
 2035 02f8 18000BE5 		str	r0, [fp, #-24]
 2036 02fc 0130A0E1 		mov	r3, r1
 2037 0300 19304BE5 		strb	r3, [fp, #-25]
  88:../gpio.c     **** 	int pos = pin*4;
 2038              		.loc 1 88 0
 2039 0304 18301BE5 		ldr	r3, [fp, #-24]
 2040 0308 0331A0E1 		mov	r3, r3, asl #2
 2041 030c 10300BE5 		str	r3, [fp, #-16]
  89:../gpio.c     **** 
  90:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2042              		.loc 1 90 0
 2043 0310 18301BE5 		ldr	r3, [fp, #-24]
 2044 0314 000053E3 		cmp	r3, #0
 2045 0318 020000BA 		blt	.L33
 2046              		.loc 1 90 0 is_stmt 0 discriminator 1
 2047 031c 18301BE5 		ldr	r3, [fp, #-24]
 2048 0320 070053E3 		cmp	r3, #7
 2049 0324 010000DA 		ble	.L34
 2050              	.L33:
  91:../gpio.c     **** 		return -1;
 2051              		.loc 1 91 0 is_stmt 1
 2052 0328 0030E0E3 		mvn	r3, #0
 2053 032c 610000EA 		b	.L35
 2054              	.L34:
  92:../gpio.c     **** 
  93:../gpio.c     **** switch (trig) {
 2055              		.loc 1 93 0
 2056 0330 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2057 0334 040053E3 		cmp	r3, #4
 2058 0338 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2059 033c 5A0000EA 		b	.L36
 2060              	.L42:
 2061 0340 54030000 		.word	.L37
 2062 0344 8C030000 		.word	.L38
 2063 0348 D4030000 		.word	.L39
 2064 034c 1C040000 		.word	.L40
 2065 0350 64040000 		.word	.L41
 2066              	.L37:
  94:../gpio.c     **** 		case LLOW:
  95:../gpio.c     **** 			// COMPLETAR: poner en rEXTINT a partir de la posiciÃ³n pos tres bits
  96:../gpio.c     **** 			// a 000, para configurar interrupciones externas por nivel bajo
  97:../gpio.c     **** 			rEXTINT &= ~(0x7 << pos);
 2067              		.loc 1 97 0
 2068 0354 6C319FE5 		ldr	r3, .L44
 2069 0358 68219FE5 		ldr	r2, .L44
 2070 035c 001092E5 		ldr	r1, [r2, #0]
 2071 0360 0700A0E3 		mov	r0, #7
 2072 0364 10201BE5 		ldr	r2, [fp, #-16]
 2073 0368 1022A0E1 		mov	r2, r0, asl r2
 2074 036c 0220E0E1 		mvn	r2, r2
 2075 0370 022001E0 		and	r2, r1, r2
 2076 0374 002083E5 		str	r2, [r3, #0]
  98:../gpio.c     **** 			rEXTINT |= (0x0 << pos);
 2077              		.loc 1 98 0
 2078 0378 48319FE5 		ldr	r3, .L44
 2079 037c 44219FE5 		ldr	r2, .L44
 2080 0380 002092E5 		ldr	r2, [r2, #0]
 2081 0384 002083E5 		str	r2, [r3, #0]
  99:../gpio.c     **** 
 100:../gpio.c     **** 			break;
 2082              		.loc 1 100 0
 2083 0388 490000EA 		b	.L43
 2084              	.L38:
 101:../gpio.c     **** 		case LHIGH:
 102:../gpio.c     **** 			// COMPLETAR: poner en rEXTINT a partir de la posiciÃ³n pos tres bits
 103:../gpio.c     **** 			// a 001, para configurar interrupciones externas por nivel alto
 104:../gpio.c     **** 			rEXTINT &= ~(0x7 << pos);
 2085              		.loc 1 104 0
 2086 038c 34319FE5 		ldr	r3, .L44
 2087 0390 30219FE5 		ldr	r2, .L44
 2088 0394 001092E5 		ldr	r1, [r2, #0]
 2089 0398 0700A0E3 		mov	r0, #7
 2090 039c 10201BE5 		ldr	r2, [fp, #-16]
 2091 03a0 1022A0E1 		mov	r2, r0, asl r2
 2092 03a4 0220E0E1 		mvn	r2, r2
 2093 03a8 022001E0 		and	r2, r1, r2
 2094 03ac 002083E5 		str	r2, [r3, #0]
 105:../gpio.c     **** 			rEXTINT |= (0x1 << pos);
 2095              		.loc 1 105 0
 2096 03b0 10319FE5 		ldr	r3, .L44
 2097 03b4 0C219FE5 		ldr	r2, .L44
 2098 03b8 001092E5 		ldr	r1, [r2, #0]
 2099 03bc 0100A0E3 		mov	r0, #1
 2100 03c0 10201BE5 		ldr	r2, [fp, #-16]
 2101 03c4 1022A0E1 		mov	r2, r0, asl r2
 2102 03c8 022081E1 		orr	r2, r1, r2
 2103 03cc 002083E5 		str	r2, [r3, #0]
 106:../gpio.c     **** 			break;
 2104              		.loc 1 106 0
 2105 03d0 370000EA 		b	.L43
 2106              	.L39:
 107:../gpio.c     **** 		case FALLING:
 108:../gpio.c     **** 			// COMPLETAR: poner en rEXTINT a partir de la posiciÃ³n pos tres bits
 109:../gpio.c     **** 			// a 010, para configurar interrupciones externas por flanco de
 110:../gpio.c     **** 			// bajada
 111:../gpio.c     **** 			rEXTINT &= ~(0x7 << pos);
 2107              		.loc 1 111 0
 2108 03d4 EC309FE5 		ldr	r3, .L44
 2109 03d8 E8209FE5 		ldr	r2, .L44
 2110 03dc 001092E5 		ldr	r1, [r2, #0]
 2111 03e0 0700A0E3 		mov	r0, #7
 2112 03e4 10201BE5 		ldr	r2, [fp, #-16]
 2113 03e8 1022A0E1 		mov	r2, r0, asl r2
 2114 03ec 0220E0E1 		mvn	r2, r2
 2115 03f0 022001E0 		and	r2, r1, r2
 2116 03f4 002083E5 		str	r2, [r3, #0]
 112:../gpio.c     **** 			rEXTINT |= (0x2 << pos);
 2117              		.loc 1 112 0
 2118 03f8 C8309FE5 		ldr	r3, .L44
 2119 03fc C4209FE5 		ldr	r2, .L44
 2120 0400 001092E5 		ldr	r1, [r2, #0]
 2121 0404 0200A0E3 		mov	r0, #2
 2122 0408 10201BE5 		ldr	r2, [fp, #-16]
 2123 040c 1022A0E1 		mov	r2, r0, asl r2
 2124 0410 022081E1 		orr	r2, r1, r2
 2125 0414 002083E5 		str	r2, [r3, #0]
 113:../gpio.c     **** 			break;
 2126              		.loc 1 113 0
 2127 0418 250000EA 		b	.L43
 2128              	.L40:
 114:../gpio.c     **** 		case RISING:
 115:../gpio.c     **** 			// COMPLETAR: poner en rEXTINT a partir de la posiciÃ³n pos tres bits
 116:../gpio.c     **** 			// a 100, para configurar interrupciones externas por flanco de
 117:../gpio.c     **** 			// subida
 118:../gpio.c     **** 			rEXTINT &= ~(0x7 << pos);
 2129              		.loc 1 118 0
 2130 041c A4309FE5 		ldr	r3, .L44
 2131 0420 A0209FE5 		ldr	r2, .L44
 2132 0424 001092E5 		ldr	r1, [r2, #0]
 2133 0428 0700A0E3 		mov	r0, #7
 2134 042c 10201BE5 		ldr	r2, [fp, #-16]
 2135 0430 1022A0E1 		mov	r2, r0, asl r2
 2136 0434 0220E0E1 		mvn	r2, r2
 2137 0438 022001E0 		and	r2, r1, r2
 2138 043c 002083E5 		str	r2, [r3, #0]
 119:../gpio.c     **** 			rEXTINT |= (0x4 << pos);
 2139              		.loc 1 119 0
 2140 0440 80309FE5 		ldr	r3, .L44
 2141 0444 7C209FE5 		ldr	r2, .L44
 2142 0448 001092E5 		ldr	r1, [r2, #0]
 2143 044c 0400A0E3 		mov	r0, #4
 2144 0450 10201BE5 		ldr	r2, [fp, #-16]
 2145 0454 1022A0E1 		mov	r2, r0, asl r2
 2146 0458 022081E1 		orr	r2, r1, r2
 2147 045c 002083E5 		str	r2, [r3, #0]
 120:../gpio.c     **** 			break;
 2148              		.loc 1 120 0
 2149 0460 130000EA 		b	.L43
 2150              	.L41:
 121:../gpio.c     **** 		case EDGE:
 122:../gpio.c     **** 			// COMPLETAR: poner en rEXTINT a partir de la posiciÃ³n pos tres bits
 123:../gpio.c     **** 			// a 110, para configurar interrupciones externas por cualquier
 124:../gpio.c     **** 			// flanco
 125:../gpio.c     **** 			rEXTINT &= ~(0x7 << pos);
 2151              		.loc 1 125 0
 2152 0464 5C309FE5 		ldr	r3, .L44
 2153 0468 58209FE5 		ldr	r2, .L44
 2154 046c 001092E5 		ldr	r1, [r2, #0]
 2155 0470 0700A0E3 		mov	r0, #7
 2156 0474 10201BE5 		ldr	r2, [fp, #-16]
 2157 0478 1022A0E1 		mov	r2, r0, asl r2
 2158 047c 0220E0E1 		mvn	r2, r2
 2159 0480 022001E0 		and	r2, r1, r2
 2160 0484 002083E5 		str	r2, [r3, #0]
 126:../gpio.c     **** 			rEXTINT |= (0x6 << pos);
 2161              		.loc 1 126 0
 2162 0488 38309FE5 		ldr	r3, .L44
 2163 048c 34209FE5 		ldr	r2, .L44
 2164 0490 001092E5 		ldr	r1, [r2, #0]
 2165 0494 0600A0E3 		mov	r0, #6
 2166 0498 10201BE5 		ldr	r2, [fp, #-16]
 2167 049c 1022A0E1 		mov	r2, r0, asl r2
 2168 04a0 022081E1 		orr	r2, r1, r2
 2169 04a4 002083E5 		str	r2, [r3, #0]
 127:../gpio.c     **** 			break;
 2170              		.loc 1 127 0
 2171 04a8 010000EA 		b	.L43
 2172              	.L36:
 128:../gpio.c     **** 		default:
 129:../gpio.c     **** 			return -1;
 2173              		.loc 1 129 0
 2174 04ac 0030E0E3 		mvn	r3, #0
 2175 04b0 000000EA 		b	.L35
 2176              	.L43:
 130:../gpio.c     **** 	}
 131:../gpio.c     **** 	return 0;
 2177              		.loc 1 131 0
 2178 04b4 0030A0E3 		mov	r3, #0
 2179              	.L35:
 132:../gpio.c     **** }
 2180              		.loc 1 132 0
 2181 04b8 0300A0E1 		mov	r0, r3
 2182 04bc 0CD04BE2 		sub	sp, fp, #12
 2183 04c0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2184 04c4 1EFF2FE1 		bx	lr
 2185              	.L45:
 2186              		.align	2
 2187              	.L44:
 2188 04c8 5000D201 		.word	30539856
 2189              		.cfi_endproc
 2190              	.LFE3:
 2192              		.align	2
 2193              		.global	portG_write
 2195              	portG_write:
 2196              	.LFB4:
 133:../gpio.c     **** 
 134:../gpio.c     **** int portG_write(int pin, enum digital val)
 135:../gpio.c     **** {
 2197              		.loc 1 135 0
 2198              		.cfi_startproc
 2199              		@ Function supports interworking.
 2200              		@ args = 0, pretend = 0, frame = 16
 2201              		@ frame_needed = 1, uses_anonymous_args = 0
 2202 04cc 0DC0A0E1 		mov	ip, sp
 2203              	.LCFI8:
 2204              		.cfi_def_cfa_register 12
 2205 04d0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2206 04d4 04B04CE2 		sub	fp, ip, #4
 2207              		.cfi_offset 14, -8
 2208              		.cfi_offset 13, -12
 2209              		.cfi_offset 11, -16
 2210              	.LCFI9:
 2211              		.cfi_def_cfa 11, 4
 2212 04d8 10D04DE2 		sub	sp, sp, #16
 2213 04dc 18000BE5 		str	r0, [fp, #-24]
 2214 04e0 0130A0E1 		mov	r3, r1
 2215 04e4 19304BE5 		strb	r3, [fp, #-25]
 136:../gpio.c     **** 	int pos = pin*2;
 2216              		.loc 1 136 0
 2217 04e8 18301BE5 		ldr	r3, [fp, #-24]
 2218 04ec 8330A0E1 		mov	r3, r3, asl #1
 2219 04f0 10300BE5 		str	r3, [fp, #-16]
 137:../gpio.c     **** 
 138:../gpio.c     **** 		if (pin < 0 || pin > 7)
 2220              		.loc 1 138 0
 2221 04f4 18301BE5 		ldr	r3, [fp, #-24]
 2222 04f8 000053E3 		cmp	r3, #0
 2223 04fc 020000BA 		blt	.L47
 2224              		.loc 1 138 0 is_stmt 0 discriminator 1
 2225 0500 18301BE5 		ldr	r3, [fp, #-24]
 2226 0504 070053E3 		cmp	r3, #7
 2227 0508 010000DA 		ble	.L48
 2228              	.L47:
 139:../gpio.c     **** 			return -1; // indica error
 2229              		.loc 1 139 0 is_stmt 1
 2230 050c 0030E0E3 		mvn	r3, #0
 2231 0510 280000EA 		b	.L49
 2232              	.L48:
 140:../gpio.c     **** 
 141:../gpio.c     **** 		if (val < 0 || val > 1)
 2233              		.loc 1 141 0
 2234 0514 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2235 0518 010053E3 		cmp	r3, #1
 2236 051c 0100009A 		bls	.L50
 142:../gpio.c     **** 			return -1; // indica error
 2237              		.loc 1 142 0
 2238 0520 0030E0E3 		mvn	r3, #0
 2239 0524 230000EA 		b	.L49
 2240              	.L50:
 143:../gpio.c     **** 
 144:../gpio.c     **** 		if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2241              		.loc 1 144 0
 2242 0528 98309FE5 		ldr	r3, .L54
 2243 052c 002093E5 		ldr	r2, [r3, #0]
 2244 0530 0310A0E3 		mov	r1, #3
 2245 0534 10301BE5 		ldr	r3, [fp, #-16]
 2246 0538 1133A0E1 		mov	r3, r1, asl r3
 2247 053c 032002E0 		and	r2, r2, r3
 2248 0540 0110A0E3 		mov	r1, #1
 2249 0544 10301BE5 		ldr	r3, [fp, #-16]
 2250 0548 1133A0E1 		mov	r3, r1, asl r3
 2251 054c 030052E1 		cmp	r2, r3
 2252 0550 0100000A 		beq	.L51
 145:../gpio.c     **** 			return -1; // indica error
 2253              		.loc 1 145 0
 2254 0554 0030E0E3 		mvn	r3, #0
 2255 0558 160000EA 		b	.L49
 2256              	.L51:
 146:../gpio.c     **** 
 147:../gpio.c     **** 		if (val)
 2257              		.loc 1 147 0
 2258 055c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2259 0560 000053E3 		cmp	r3, #0
 2260 0564 0900000A 		beq	.L52
 148:../gpio.c     **** 			// COMPLETAR: poner en rPDATG el bit indicado por pin a 1
 149:../gpio.c     **** 			rPDATG|= ~(0x1<<pin);
 2261              		.loc 1 149 0
 2262 0568 5C309FE5 		ldr	r3, .L54+4
 2263 056c 58209FE5 		ldr	r2, .L54+4
 2264 0570 001092E5 		ldr	r1, [r2, #0]
 2265 0574 0100A0E3 		mov	r0, #1
 2266 0578 18201BE5 		ldr	r2, [fp, #-24]
 2267 057c 1022A0E1 		mov	r2, r0, asl r2
 2268 0580 0220E0E1 		mvn	r2, r2
 2269 0584 022081E1 		orr	r2, r1, r2
 2270 0588 002083E5 		str	r2, [r3, #0]
 2271 058c 080000EA 		b	.L53
 2272              	.L52:
 150:../gpio.c     **** 		else
 151:../gpio.c     **** 			// COMPLETAR: poner en rPDATG el bit indicado por pin a 0
 152:../gpio.c     **** 			rPDATG &= ~(0x1<<pin);
 2273              		.loc 1 152 0
 2274 0590 34309FE5 		ldr	r3, .L54+4
 2275 0594 30209FE5 		ldr	r2, .L54+4
 2276 0598 001092E5 		ldr	r1, [r2, #0]
 2277 059c 0100A0E3 		mov	r0, #1
 2278 05a0 18201BE5 		ldr	r2, [fp, #-24]
 2279 05a4 1022A0E1 		mov	r2, r0, asl r2
 2280 05a8 0220E0E1 		mvn	r2, r2
 2281 05ac 022001E0 		and	r2, r1, r2
 2282 05b0 002083E5 		str	r2, [r3, #0]
 2283              	.L53:
 153:../gpio.c     **** 
 154:../gpio.c     **** 		return 0;
 2284              		.loc 1 154 0
 2285 05b4 0030A0E3 		mov	r3, #0
 2286              	.L49:
 155:../gpio.c     **** }
 2287              		.loc 1 155 0
 2288 05b8 0300A0E1 		mov	r0, r3
 2289 05bc 0CD04BE2 		sub	sp, fp, #12
 2290 05c0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2291 05c4 1EFF2FE1 		bx	lr
 2292              	.L55:
 2293              		.align	2
 2294              	.L54:
 2295 05c8 4000D201 		.word	30539840
 2296 05cc 4400D201 		.word	30539844
 2297              		.cfi_endproc
 2298              	.LFE4:
 2300              		.align	2
 2301              		.global	portG_read
 2303              	portG_read:
 2304              	.LFB5:
 156:../gpio.c     **** 
 157:../gpio.c     **** int portG_read(int pin, enum digital* val)
 158:../gpio.c     **** {
 2305              		.loc 1 158 0
 2306              		.cfi_startproc
 2307              		@ Function supports interworking.
 2308              		@ args = 0, pretend = 0, frame = 16
 2309              		@ frame_needed = 1, uses_anonymous_args = 0
 2310 05d0 0DC0A0E1 		mov	ip, sp
 2311              	.LCFI10:
 2312              		.cfi_def_cfa_register 12
 2313 05d4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2314 05d8 04B04CE2 		sub	fp, ip, #4
 2315              		.cfi_offset 14, -8
 2316              		.cfi_offset 13, -12
 2317              		.cfi_offset 11, -16
 2318              	.LCFI11:
 2319              		.cfi_def_cfa 11, 4
 2320 05dc 10D04DE2 		sub	sp, sp, #16
 2321 05e0 18000BE5 		str	r0, [fp, #-24]
 2322 05e4 1C100BE5 		str	r1, [fp, #-28]
 159:../gpio.c     **** 	int pos = pin*2;
 2323              		.loc 1 159 0
 2324 05e8 18301BE5 		ldr	r3, [fp, #-24]
 2325 05ec 8330A0E1 		mov	r3, r3, asl #1
 2326 05f0 10300BE5 		str	r3, [fp, #-16]
 160:../gpio.c     **** 
 161:../gpio.c     **** 		if (pin < 0 || pin > 7)
 2327              		.loc 1 161 0
 2328 05f4 18301BE5 		ldr	r3, [fp, #-24]
 2329 05f8 000053E3 		cmp	r3, #0
 2330 05fc 020000BA 		blt	.L57
 2331              		.loc 1 161 0 is_stmt 0 discriminator 1
 2332 0600 18301BE5 		ldr	r3, [fp, #-24]
 2333 0604 070053E3 		cmp	r3, #7
 2334 0608 010000DA 		ble	.L58
 2335              	.L57:
 162:../gpio.c     **** 			return -1; // indica error
 2336              		.loc 1 162 0 is_stmt 1
 2337 060c 0030E0E3 		mvn	r3, #0
 2338 0610 190000EA 		b	.L59
 2339              	.L58:
 163:../gpio.c     **** 
 164:../gpio.c     **** 		if (rPCONG & (0x3 << pos))
 2340              		.loc 1 164 0
 2341 0614 70309FE5 		ldr	r3, .L63
 2342 0618 002093E5 		ldr	r2, [r3, #0]
 2343 061c 0310A0E3 		mov	r1, #3
 2344 0620 10301BE5 		ldr	r3, [fp, #-16]
 2345 0624 1133A0E1 		mov	r3, r1, asl r3
 2346 0628 033002E0 		and	r3, r2, r3
 2347 062c 000053E3 		cmp	r3, #0
 2348 0630 0100000A 		beq	.L60
 165:../gpio.c     **** 			return -1; // indica error
 2349              		.loc 1 165 0
 2350 0634 0030E0E3 		mvn	r3, #0
 2351 0638 0F0000EA 		b	.L59
 2352              	.L60:
 166:../gpio.c     **** 
 167:../gpio.c     **** 		if((rPDATG & (0x1 << pin)))
 2353              		.loc 1 167 0
 2354 063c 4C309FE5 		ldr	r3, .L63+4
 2355 0640 002093E5 		ldr	r2, [r3, #0]
 2356 0644 0110A0E3 		mov	r1, #1
 2357 0648 18301BE5 		ldr	r3, [fp, #-24]
 2358 064c 1133A0E1 		mov	r3, r1, asl r3
 2359 0650 033002E0 		and	r3, r2, r3
 2360 0654 000053E3 		cmp	r3, #0
 2361 0658 0300000A 		beq	.L61
 168:../gpio.c     **** 				*val=HIGH;
 2362              		.loc 1 168 0
 2363 065c 1C301BE5 		ldr	r3, [fp, #-28]
 2364 0660 0120A0E3 		mov	r2, #1
 2365 0664 0020C3E5 		strb	r2, [r3, #0]
 2366 0668 020000EA 		b	.L62
 2367              	.L61:
 169:../gpio.c     **** 			else
 170:../gpio.c     **** 				*val=LOW;
 2368              		.loc 1 170 0
 2369 066c 1C301BE5 		ldr	r3, [fp, #-28]
 2370 0670 0020A0E3 		mov	r2, #0
 2371 0674 0020C3E5 		strb	r2, [r3, #0]
 2372              	.L62:
 171:../gpio.c     **** 
 172:../gpio.c     **** 		return 0;
 2373              		.loc 1 172 0
 2374 0678 0030A0E3 		mov	r3, #0
 2375              	.L59:
 173:../gpio.c     **** }
 2376              		.loc 1 173 0
 2377 067c 0300A0E1 		mov	r0, r3
 2378 0680 0CD04BE2 		sub	sp, fp, #12
 2379 0684 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2380 0688 1EFF2FE1 		bx	lr
 2381              	.L64:
 2382              		.align	2
 2383              	.L63:
 2384 068c 4000D201 		.word	30539840
 2385 0690 4400D201 		.word	30539844
 2386              		.cfi_endproc
 2387              	.LFE5:
 2389              		.align	2
 2390              		.global	portG_conf_pup
 2392              	portG_conf_pup:
 2393              	.LFB6:
 174:../gpio.c     **** 
 175:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 176:../gpio.c     **** {
 2394              		.loc 1 176 0
 2395              		.cfi_startproc
 2396              		@ Function supports interworking.
 2397              		@ args = 0, pretend = 0, frame = 8
 2398              		@ frame_needed = 1, uses_anonymous_args = 0
 2399 0694 0DC0A0E1 		mov	ip, sp
 2400              	.LCFI12:
 2401              		.cfi_def_cfa_register 12
 2402 0698 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2403 069c 04B04CE2 		sub	fp, ip, #4
 2404              		.cfi_offset 14, -8
 2405              		.cfi_offset 13, -12
 2406              		.cfi_offset 11, -16
 2407              	.LCFI13:
 2408              		.cfi_def_cfa 11, 4
 2409 06a0 08D04DE2 		sub	sp, sp, #8
 2410 06a4 10000BE5 		str	r0, [fp, #-16]
 2411 06a8 0130A0E1 		mov	r3, r1
 2412 06ac 11304BE5 		strb	r3, [fp, #-17]
 177:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2413              		.loc 1 177 0
 2414 06b0 10301BE5 		ldr	r3, [fp, #-16]
 2415 06b4 000053E3 		cmp	r3, #0
 2416 06b8 020000BA 		blt	.L66
 2417              		.loc 1 177 0 is_stmt 0 discriminator 1
 2418 06bc 10301BE5 		ldr	r3, [fp, #-16]
 2419 06c0 070053E3 		cmp	r3, #7
 2420 06c4 010000DA 		ble	.L67
 2421              	.L66:
 178:../gpio.c     **** 			return -1; // indica error
 2422              		.loc 1 178 0 is_stmt 1
 2423 06c8 0030E0E3 		mvn	r3, #0
 2424 06cc 1D0000EA 		b	.L68
 2425              	.L67:
 179:../gpio.c     **** 
 180:../gpio.c     **** 		if (st != ENABLE && st != DISABLE)
 2426              		.loc 1 180 0
 2427 06d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2428 06d4 010053E3 		cmp	r3, #1
 2429 06d8 0400000A 		beq	.L69
 2430              		.loc 1 180 0 is_stmt 0 discriminator 1
 2431 06dc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2432 06e0 000053E3 		cmp	r3, #0
 2433 06e4 0100000A 		beq	.L69
 181:../gpio.c     **** 			return -1; // indica error
 2434              		.loc 1 181 0 is_stmt 1
 2435 06e8 0030E0E3 		mvn	r3, #0
 2436 06ec 150000EA 		b	.L68
 2437              	.L69:
 182:../gpio.c     **** 
 183:../gpio.c     **** 		if (st == ENABLE)
 2438              		.loc 1 183 0
 2439 06f0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2440 06f4 010053E3 		cmp	r3, #1
 2441 06f8 0900001A 		bne	.L70
 184:../gpio.c     **** 			// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 185:../gpio.c     **** 			// para activar la resistencia de pull-up
 186:../gpio.c     **** 			rPUPG &= ~(0x1 << pin);
 2442              		.loc 1 186 0
 2443 06fc 54309FE5 		ldr	r3, .L72
 2444 0700 50209FE5 		ldr	r2, .L72
 2445 0704 001092E5 		ldr	r1, [r2, #0]
 2446 0708 0100A0E3 		mov	r0, #1
 2447 070c 10201BE5 		ldr	r2, [fp, #-16]
 2448 0710 1022A0E1 		mov	r2, r0, asl r2
 2449 0714 0220E0E1 		mvn	r2, r2
 2450 0718 022001E0 		and	r2, r1, r2
 2451 071c 002083E5 		str	r2, [r3, #0]
 2452 0720 070000EA 		b	.L71
 2453              	.L70:
 187:../gpio.c     **** 		else
 188:../gpio.c     **** 			// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 189:../gpio.c     **** 			// para desactivar la resistencia de pull-up
 190:../gpio.c     **** 			rPUPG |= (0x1 << pin);
 2454              		.loc 1 190 0
 2455 0724 2C309FE5 		ldr	r3, .L72
 2456 0728 28209FE5 		ldr	r2, .L72
 2457 072c 001092E5 		ldr	r1, [r2, #0]
 2458 0730 0100A0E3 		mov	r0, #1
 2459 0734 10201BE5 		ldr	r2, [fp, #-16]
 2460 0738 1022A0E1 		mov	r2, r0, asl r2
 2461 073c 022081E1 		orr	r2, r1, r2
 2462 0740 002083E5 		str	r2, [r3, #0]
 2463              	.L71:
 191:../gpio.c     **** 
 192:../gpio.c     **** 		return 0;
 2464              		.loc 1 192 0
 2465 0744 0030A0E3 		mov	r3, #0
 2466              	.L68:
 193:../gpio.c     **** }
 2467              		.loc 1 193 0
 2468 0748 0300A0E1 		mov	r0, r3
 2469 074c 0CD04BE2 		sub	sp, fp, #12
 2470 0750 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2471 0754 1EFF2FE1 		bx	lr
 2472              	.L73:
 2473              		.align	2
 2474              	.L72:
 2475 0758 4800D201 		.word	30539848
 2476              		.cfi_endproc
 2477              	.LFE6:
 2479              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1698   .text:00000000 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1701   .text:00000000 portB_conf
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1784   .text:000000c4 $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1788   .text:000000c8 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1791   .text:000000c8 portB_write
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1870   .text:00000180 $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1874   .text:00000184 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1877   .text:00000184 portG_conf
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1921   .text:000001dc $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:1927   .text:000001ec $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2010   .text:000002e4 $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2014   .text:000002e8 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2017   .text:000002e8 portG_eint_trig
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2061   .text:00000340 $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2068   .text:00000354 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2188   .text:000004c8 $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2192   .text:000004cc $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2195   .text:000004cc portG_write
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2295   .text:000005c8 $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2300   .text:000005d0 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2303   .text:000005d0 portG_read
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2384   .text:0000068c $d
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2389   .text:00000694 $a
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2392   .text:00000694 portG_conf_pup
C:\Users\ignac\AppData\Local\Temp\ccIvEmSl.s:2475   .text:00000758 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
