
Practica1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bss          0000000a  0c000000  0c000000  00008000  2**2
                  ALLOC
  1 .text         00000118  0c00000c  0c00000c  0000800c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_abbrev 00000088  00000000  00000000  00008124  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000137  00000000  00000000  000081ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_line   00000083  00000000  00000000  000082e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_macinfo 000020fc  00000000  00000000  00008366  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_loc    0000002c  00000000  00000000  0000a462  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_pubnames 00000035  00000000  00000000  0000a48e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000040  00000000  00000000  0000a4c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000005a  00000000  00000000  0000a508  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      0000002a  00000000  00000000  0000a562  2**0
                  CONTENTS, READONLY
 11 .ARM.attributes 00000030  00000000  00000000  0000a58c  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00000030  00000000  00000000  0000a5bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0c00000c <main>:
int x;
short y1;
unsigned short y2;
char z;

int main() {
 c00000c:	e1a0c00d 	mov	ip, sp
 c000010:	e92dd800 	push	{fp, ip, lr, pc}
 c000014:	e24cb004 	sub	fp, ip, #4
 c000018:	e24dd008 	sub	sp, sp, #8
  unsigned short a,b;

  x=9;
 c00001c:	e59f30dc 	ldr	r3, [pc, #220]	; c000100 <main+0xf4>
 c000020:	e3a02009 	mov	r2, #9
 c000024:	e5832000 	str	r2, [r3]
  z = x + 126;
 c000028:	e59f30d0 	ldr	r3, [pc, #208]	; c000100 <main+0xf4>
 c00002c:	e5933000 	ldr	r3, [r3]
 c000030:	e20330ff 	and	r3, r3, #255	; 0xff
 c000034:	e283307e 	add	r3, r3, #126	; 0x7e
 c000038:	e20320ff 	and	r2, r3, #255	; 0xff
 c00003c:	e59f30c0 	ldr	r3, [pc, #192]	; c000104 <main+0xf8>
 c000040:	e5c32000 	strb	r2, [r3]
  a = 4;
 c000044:	e3a03004 	mov	r3, #4
 c000048:	e14b30be 	strh	r3, [fp, #-14]
  b = a - 7;
 c00004c:	e15b30be 	ldrh	r3, [fp, #-14]
 c000050:	e2433007 	sub	r3, r3, #7
 c000054:	e14b31b0 	strh	r3, [fp, #-16]
  
  z = 9 /2;
 c000058:	e59f30a4 	ldr	r3, [pc, #164]	; c000104 <main+0xf8>
 c00005c:	e3a02004 	mov	r2, #4
 c000060:	e5c32000 	strb	r2, [r3]

  y1 = 128*128 + (128*128-1); // 2^7*2^7) + (2^14-1)
 c000064:	e59f309c 	ldr	r3, [pc, #156]	; c000108 <main+0xfc>
 c000068:	e3e02902 	mvn	r2, #32768	; 0x8000
 c00006c:	e1c320b0 	strh	r2, [r3]
  y1 = y1 + 1; // Comprobar si el resultado es el esperado
 c000070:	e59f3090 	ldr	r3, [pc, #144]	; c000108 <main+0xfc>
 c000074:	e1d330b0 	ldrh	r3, [r3]
 c000078:	e1a03803 	lsl	r3, r3, #16
 c00007c:	e1a03823 	lsr	r3, r3, #16
 c000080:	e2833001 	add	r3, r3, #1
 c000084:	e1a03803 	lsl	r3, r3, #16
 c000088:	e1a03823 	lsr	r3, r3, #16
 c00008c:	e1a03803 	lsl	r3, r3, #16
 c000090:	e1a02823 	lsr	r2, r3, #16
 c000094:	e59f306c 	ldr	r3, [pc, #108]	; c000108 <main+0xfc>
 c000098:	e1c320b0 	strh	r2, [r3]

  y2 = 128*128 + (128*128-1); // 2^7*2^7) + (2^14-1)
 c00009c:	e59f3068 	ldr	r3, [pc, #104]	; c00010c <main+0x100>
 c0000a0:	e3e02902 	mvn	r2, #32768	; 0x8000
 c0000a4:	e1c320b0 	strh	r2, [r3]
  y2 = y2 + 1; //Comprobar si el resultado es el esperad
 c0000a8:	e59f305c 	ldr	r3, [pc, #92]	; c00010c <main+0x100>
 c0000ac:	e1d330b0 	ldrh	r3, [r3]
 c0000b0:	e2833001 	add	r3, r3, #1
 c0000b4:	e1a03803 	lsl	r3, r3, #16
 c0000b8:	e1a02823 	lsr	r2, r3, #16
 c0000bc:	e59f3048 	ldr	r3, [pc, #72]	; c00010c <main+0x100>
 c0000c0:	e1c320b0 	strh	r2, [r3]


  y2 = 256*128 + (256*128-1); // (2^8*2^7) + (2^15-1)
 c0000c4:	e59f3040 	ldr	r3, [pc, #64]	; c00010c <main+0x100>
 c0000c8:	e3e02000 	mvn	r2, #0
 c0000cc:	e1c320b0 	strh	r2, [r3]
  y2 = y2 + 1; //Comprobar si el resultado es el esperad
 c0000d0:	e59f3034 	ldr	r3, [pc, #52]	; c00010c <main+0x100>
 c0000d4:	e1d330b0 	ldrh	r3, [r3]
 c0000d8:	e2833001 	add	r3, r3, #1
 c0000dc:	e1a03803 	lsl	r3, r3, #16
 c0000e0:	e1a02823 	lsr	r2, r3, #16
 c0000e4:	e59f3020 	ldr	r3, [pc, #32]	; c00010c <main+0x100>
 c0000e8:	e1c320b0 	strh	r2, [r3]

  return 0;
 c0000ec:	e3a03000 	mov	r3, #0
}
 c0000f0:	e1a00003 	mov	r0, r3
 c0000f4:	e24bd00c 	sub	sp, fp, #12
 c0000f8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c0000fc:	e12fff1e 	bx	lr
 c000100:	0c000000 	.word	0x0c000000
 c000104:	0c000006 	.word	0x0c000006
 c000108:	0c000008 	.word	0x0c000008
 c00010c:	0c000004 	.word	0x0c000004

0c000110 <start>:

.equ USRSTACK, 0xc7ff000

.text
start:
	ldr sp, =USRSTACK
 c000110:	e59fd008 	ldr	sp, [pc, #8]	; c000120 <End+0x4>
    mov fp, #0
 c000114:	e3a0b000 	mov	fp, #0
    bl main
 c000118:	ebffffbb 	bl	c00000c <main>

0c00011c <End>:

End:
    B End
 c00011c:	eafffffe 	b	c00011c <End>
 c000120:	0c7ff000 	.word	0x0c7ff000
