   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"button.c"
  21              	.Ltext0:
  22              		.file 1 "../button.c"
 1728              		.align	2
 1729              		.global	read_button
 1731              	read_button:
 1732              	.LFB0:
   1:../button.c   **** /*-------------------------------------------------------------------
   2:../button.c   **** **
   3:../button.c   **** **  Fichero:
   4:../button.c   **** **    button.c  10/6/2014
   5:../button.c   **** **
   6:../button.c   **** **    Estructura de Computadores
   7:../button.c   **** **    Dpto. de Arquitectura de Computadores y Autom�tica
   8:../button.c   **** **    Facultad de Inform�tica. Universidad Complutense de Madrid
   9:../button.c   **** **
  10:../button.c   **** **  Prop�sito:
  11:../button.c   **** **    Contiene las implementaciones de las funciones
  12:../button.c   **** **    para la gesti�n de los pulsadores de la placa de prototipado
  13:../button.c   **** **
  14:../button.c   **** **  Notas de dise�o:
  15:../button.c   **** **
  16:../button.c   **** **-----------------------------------------------------------------*/
  17:../button.c   **** 
  18:../button.c   **** #include "44b.h"
  19:../button.c   **** #include "utils.h"
  20:../button.c   **** #include "button.h"
  21:../button.c   **** #include "leds.h"
  22:../button.c   **** #include "gpio.h"
  23:../button.c   **** 
  24:../button.c   **** unsigned int read_button(void)
  25:../button.c   **** {
 1733              		.loc 1 25 0
 1734              		.cfi_startproc
 1735              		@ Function supports interworking.
 1736              		@ args = 0, pretend = 0, frame = 8
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738 0000 0DC0A0E1 		mov	ip, sp
 1739              	.LCFI0:
 1740              		.cfi_def_cfa_register 12
 1741 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1742 0008 04B04CE2 		sub	fp, ip, #4
 1743              		.cfi_offset 14, -8
 1744              		.cfi_offset 13, -12
 1745              		.cfi_offset 11, -16
 1746              	.LCFI1:
 1747              		.cfi_def_cfa 11, 4
 1748 000c 08D04DE2 		sub	sp, sp, #8
  26:../button.c   **** 	unsigned int buttons = 0;
 1749              		.loc 1 26 0
 1750 0010 0030A0E3 		mov	r3, #0
 1751 0014 10300BE5 		str	r3, [fp, #-16]
  27:../button.c   **** 	enum digital val;
  28:../button.c   **** 
  29:../button.c   **** 	//COMPLETAR utilizando el interfaz del puerto G de gpio.h debemos leer los
  30:../button.c   **** 	//pines 6 y 7 del puerto G (portG_read) debemos devolver un valor (buttons)
  31:../button.c   **** 	//en el que el bit 0 (el menos significativo) representa el estado del botón
  32:../button.c   **** 	//del pin 6 y el bit 1 representa el estado del botón del pin 7 (a 1 si
  33:../button.c   **** 	//están pulsados a 0 si no lo están).
  34:../button.c   **** 	buttons = portG_read(6, &val);
 1752              		.loc 1 34 0
 1753 0018 11304BE2 		sub	r3, fp, #17
 1754 001c 0600A0E3 		mov	r0, #6
 1755 0020 0310A0E1 		mov	r1, r3
 1756 0024 FEFFFFEB 		bl	portG_read
 1757 0028 0030A0E1 		mov	r3, r0
 1758 002c 10300BE5 		str	r3, [fp, #-16]
  35:../button.c   **** 			if(val == LOW)
 1759              		.loc 1 35 0
 1760 0030 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1761 0034 000053E3 		cmp	r3, #0
 1762 0038 0100001A 		bne	.L2
  36:../button.c   **** 				return BUT1;
 1763              		.loc 1 36 0
 1764 003c 0130A0E3 		mov	r3, #1
 1765 0040 0B0000EA 		b	.L3
 1766              	.L2:
  37:../button.c   **** 			buttons = portG_read(7, &val);
 1767              		.loc 1 37 0
 1768 0044 11304BE2 		sub	r3, fp, #17
 1769 0048 0700A0E3 		mov	r0, #7
 1770 004c 0310A0E1 		mov	r1, r3
 1771 0050 FEFFFFEB 		bl	portG_read
 1772 0054 0030A0E1 		mov	r3, r0
 1773 0058 10300BE5 		str	r3, [fp, #-16]
  38:../button.c   **** 			if(val == LOW)
 1774              		.loc 1 38 0
 1775 005c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1776 0060 000053E3 		cmp	r3, #0
 1777 0064 0100001A 		bne	.L4
  39:../button.c   **** 				return BUT2;
 1778              		.loc 1 39 0
 1779 0068 0230A0E3 		mov	r3, #2
 1780 006c 000000EA 		b	.L3
 1781              	.L4:
  40:../button.c   **** 
  41:../button.c   **** 
  42:../button.c   **** 	return buttons;
 1782              		.loc 1 42 0
 1783 0070 10301BE5 		ldr	r3, [fp, #-16]
 1784              	.L3:
  43:../button.c   **** }
 1785              		.loc 1 43 0
 1786 0074 0300A0E1 		mov	r0, r3
 1787 0078 0CD04BE2 		sub	sp, fp, #12
 1788 007c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1789 0080 1EFF2FE1 		bx	lr
 1790              		.cfi_endproc
 1791              	.LFE0:
 1793              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 button.c
C:\Users\ignac\AppData\Local\Temp\ccGyqxuc.s:1728   .text:00000000 $a
C:\Users\ignac\AppData\Local\Temp\ccGyqxuc.s:1731   .text:00000000 read_button
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
portG_read
