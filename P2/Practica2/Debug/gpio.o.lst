   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../gpio.c     **** #include "44b.h"
   2:../gpio.c     **** #include "gpio.h"
   3:../gpio.c     **** 
   4:../gpio.c     **** /* Port B interface implementation */
   5:../gpio.c     **** 
   6:../gpio.c     **** int portB_conf(int pin, enum port_mode mode)
   7:../gpio.c     **** {
 1703              		.loc 1 7 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
   8:../gpio.c     **** 	int ret = 0;
 1722              		.loc 1 8 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
   9:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1725              		.loc 1 9 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 9 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
  10:../gpio.c     **** 		return -1; // indica error
 1734              		.loc 1 10 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  11:../gpio.c     **** 
  12:../gpio.c     **** 
  13:../gpio.c     **** 	if (mode == SIGOUT)
 1738              		.loc 1 13 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  14:../gpio.c     **** 		rPCONB |= (0x1 << pin);
 1742              		.loc 1 14 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  15:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 1 para que por
  16:../gpio.c     **** 		// dicho pin en el puerto B salga la seÃ±al correspondiente del
  17:../gpio.c     **** 		// controlador de memoria
  18:../gpio.c     **** 	else if (mode == OUTPUT)
 1753              		.loc 1 18 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  19:../gpio.c     **** 		rPCONB &= ~(0x1 << pin);
 1757              		.loc 1 19 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  20:../gpio.c     **** 
  21:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 0 para que dicho
  22:../gpio.c     **** 		// pin sea un pin de salida
  23:../gpio.c     **** 	else
  24:../gpio.c     **** 		ret = -1; // indica error
 1769              		.loc 1 24 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  25:../gpio.c     **** 
  26:../gpio.c     **** 	return ret;
 1773              		.loc 1 26 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  27:../gpio.c     **** }
 1776              		.loc 1 27 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  28:../gpio.c     **** 
  29:../gpio.c     **** int portB_write(int pin, enum digital val)
  30:../gpio.c     **** {
 1793              		.loc 1 30 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  31:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 31 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 31 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  32:../gpio.c     **** 		return -1; // indica error
 1821              		.loc 1 32 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  33:../gpio.c     **** 
  34:../gpio.c     **** 	if (val < 0 || val > 1)
 1825              		.loc 1 34 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  35:../gpio.c     **** 		return -1; // indica error
 1829              		.loc 1 35 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  36:../gpio.c     **** 
  37:../gpio.c     **** 	if (val)
 1833              		.loc 1 37 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  38:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 1
  39:../gpio.c     **** 		rPDATB |= (0x1 << pin);
 1837              		.loc 1 39 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  40:../gpio.c     **** 
  41:../gpio.c     **** 	else
  42:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 0
  43:../gpio.c     **** 		rPDATB &= ~(0x1 << pin);
 1848              		.loc 1 43 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022001E0 		and	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  44:../gpio.c     **** 	return 0;
 1859              		.loc 1 44 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  45:../gpio.c     **** }
 1862              		.loc 1 45 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  46:../gpio.c     **** 
  47:../gpio.c     **** /* Port G interface implementation */
  48:../gpio.c     **** 
  49:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  50:../gpio.c     **** {
 1879              		.loc 1 50 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  51:../gpio.c     **** 	int pos  = pin*2;
 1898              		.loc 1 51 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  52:../gpio.c     **** 
  53:../gpio.c     **** 	if (pin < 0 || pin > 7)
 1902              		.loc 1 53 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 53 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  54:../gpio.c     **** 		return -1; // indica error
 1911              		.loc 1 54 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 410000EA 		b	.L22
 1914              	.L21:
  55:../gpio.c     **** 
  56:../gpio.c     **** 	switch (mode) {
 1915              		.loc 1 56 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 3A0000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 14020000 		.word	.L25
 1923 01e4 5C020000 		.word	.L26
 1924 01e8 A4020000 		.word	.L27
 1925              	.L24:
  57:../gpio.c     **** 		case INPUT:
  58:../gpio.c     **** 			rPCONG &= ~(0x3 << pos);
 1926              		.loc 1 58 0
 1927 01ec F0309FE5 		ldr	r3, .L30
 1928 01f0 EC209FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0300A0E3 		mov	r0, #3
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  59:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 00 a partir de la posiciÃ³n pos para
  60:../gpio.c     **** 			// configurar como pin de entrada el pin indicado por el parÃ¡metro pin
  61:../gpio.c     **** 			break;
 1936              		.loc 1 61 0
 1937 0210 2E0000EA 		b	.L29
 1938              	.L25:
  62:../gpio.c     **** 		case OUTPUT:
  63:../gpio.c     **** 			rPCONG &= ~(0x3 << pos);
 1939              		.loc 1 63 0
 1940 0214 C8309FE5 		ldr	r3, .L30
 1941 0218 C4209FE5 		ldr	r2, .L30
 1942 021c 001092E5 		ldr	r1, [r2, #0]
 1943 0220 0300A0E3 		mov	r0, #3
 1944 0224 10201BE5 		ldr	r2, [fp, #-16]
 1945 0228 1022A0E1 		mov	r2, r0, asl r2
 1946 022c 0220E0E1 		mvn	r2, r2
 1947 0230 022001E0 		and	r2, r1, r2
 1948 0234 002083E5 		str	r2, [r3, #0]
  64:../gpio.c     **** 			rPCONG |= (0x1 << pos);
 1949              		.loc 1 64 0
 1950 0238 A4309FE5 		ldr	r3, .L30
 1951 023c A0209FE5 		ldr	r2, .L30
 1952 0240 001092E5 		ldr	r1, [r2, #0]
 1953 0244 0100A0E3 		mov	r0, #1
 1954 0248 10201BE5 		ldr	r2, [fp, #-16]
 1955 024c 1022A0E1 		mov	r2, r0, asl r2
 1956 0250 022081E1 		orr	r2, r1, r2
 1957 0254 002083E5 		str	r2, [r3, #0]
  65:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 01 a partir de la posiciÃ³n pos para
  66:../gpio.c     **** 			// configurar como pin de salida el pin indicado por el parÃ¡metro pin
  67:../gpio.c     **** 			break;
 1958              		.loc 1 67 0
 1959 0258 1C0000EA 		b	.L29
 1960              	.L26:
  68:../gpio.c     **** 		case SIGOUT:
  69:../gpio.c     **** 			rPCONG &= ~(0x3 << pos);
 1961              		.loc 1 69 0
 1962 025c 80309FE5 		ldr	r3, .L30
 1963 0260 7C209FE5 		ldr	r2, .L30
 1964 0264 001092E5 		ldr	r1, [r2, #0]
 1965 0268 0300A0E3 		mov	r0, #3
 1966 026c 10201BE5 		ldr	r2, [fp, #-16]
 1967 0270 1022A0E1 		mov	r2, r0, asl r2
 1968 0274 0220E0E1 		mvn	r2, r2
 1969 0278 022001E0 		and	r2, r1, r2
 1970 027c 002083E5 		str	r2, [r3, #0]
  70:../gpio.c     **** 			rPCONG |= (0x2 << pos);
 1971              		.loc 1 70 0
 1972 0280 5C309FE5 		ldr	r3, .L30
 1973 0284 58209FE5 		ldr	r2, .L30
 1974 0288 001092E5 		ldr	r1, [r2, #0]
 1975 028c 0200A0E3 		mov	r0, #2
 1976 0290 10201BE5 		ldr	r2, [fp, #-16]
 1977 0294 1022A0E1 		mov	r2, r0, asl r2
 1978 0298 022081E1 		orr	r2, r1, r2
 1979 029c 002083E5 		str	r2, [r3, #0]
  71:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 10 a partir de la posiciÃ³n pos para
  72:../gpio.c     **** 			// que salga la seÃ±al interna correspondiente por el pin indicado
  73:../gpio.c     **** 			// por el parÃ¡metro piSn
  74:../gpio.c     **** 			break;
 1980              		.loc 1 74 0
 1981 02a0 0A0000EA 		b	.L29
 1982              	.L27:
  75:../gpio.c     **** 		case EINT:
  76:../gpio.c     **** 			rPCONG |= (0x3 << pos);
 1983              		.loc 1 76 0
 1984 02a4 38309FE5 		ldr	r3, .L30
 1985 02a8 34209FE5 		ldr	r2, .L30
 1986 02ac 001092E5 		ldr	r1, [r2, #0]
 1987 02b0 0300A0E3 		mov	r0, #3
 1988 02b4 10201BE5 		ldr	r2, [fp, #-16]
 1989 02b8 1022A0E1 		mov	r2, r0, asl r2
 1990 02bc 022081E1 		orr	r2, r1, r2
 1991 02c0 002083E5 		str	r2, [r3, #0]
  77:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 11 a partir de la posiciÃ³n pos para
  78:../gpio.c     **** 			// habilitar la generaciÃ³n de interrupciones externas por el pin
  79:../gpio.c     **** 			// indicado por el parÃ¡metro pin
  80:../gpio.c     **** 			break;
 1992              		.loc 1 80 0
 1993 02c4 010000EA 		b	.L29
 1994              	.L23:
  81:../gpio.c     **** 		default:
  82:../gpio.c     **** 			return -1;
 1995              		.loc 1 82 0
 1996 02c8 0030E0E3 		mvn	r3, #0
 1997 02cc 000000EA 		b	.L22
 1998              	.L29:
  83:../gpio.c     **** 	}
  84:../gpio.c     **** 
  85:../gpio.c     **** 	return 0;
 1999              		.loc 1 85 0
 2000 02d0 0030A0E3 		mov	r3, #0
 2001              	.L22:
  86:../gpio.c     **** }
 2002              		.loc 1 86 0
 2003 02d4 0300A0E1 		mov	r0, r3
 2004 02d8 0CD04BE2 		sub	sp, fp, #12
 2005 02dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2006 02e0 1EFF2FE1 		bx	lr
 2007              	.L31:
 2008              		.align	2
 2009              	.L30:
 2010 02e4 4000D201 		.word	30539840
 2011              		.cfi_endproc
 2012              	.LFE2:
 2014              		.align	2
 2015              		.global	portG_eint_trig
 2017              	portG_eint_trig:
 2018              	.LFB3:
  87:../gpio.c     **** 
  88:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig)
  89:../gpio.c     **** {
 2019              		.loc 1 89 0
 2020              		.cfi_startproc
 2021              		@ Function supports interworking.
 2022              		@ args = 0, pretend = 0, frame = 8
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024 02e8 0DC0A0E1 		mov	ip, sp
 2025              	.LCFI6:
 2026              		.cfi_def_cfa_register 12
 2027 02ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2028 02f0 04B04CE2 		sub	fp, ip, #4
 2029              		.cfi_offset 14, -8
 2030              		.cfi_offset 13, -12
 2031              		.cfi_offset 11, -16
 2032              	.LCFI7:
 2033              		.cfi_def_cfa 11, 4
 2034 02f4 08D04DE2 		sub	sp, sp, #8
 2035 02f8 10000BE5 		str	r0, [fp, #-16]
 2036 02fc 0130A0E1 		mov	r3, r1
 2037 0300 11304BE5 		strb	r3, [fp, #-17]
  90:../gpio.c     **** 	// A COMPLETAR EN LA SEGUNDA PARTE DE LA PRÃ�CTICA
  91:../gpio.c     **** 	return 0;
 2038              		.loc 1 91 0
 2039 0304 0030A0E3 		mov	r3, #0
  92:../gpio.c     **** }
 2040              		.loc 1 92 0
 2041 0308 0300A0E1 		mov	r0, r3
 2042 030c 0CD04BE2 		sub	sp, fp, #12
 2043 0310 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2044 0314 1EFF2FE1 		bx	lr
 2045              		.cfi_endproc
 2046              	.LFE3:
 2048              		.align	2
 2049              		.global	portG_write
 2051              	portG_write:
 2052              	.LFB4:
  93:../gpio.c     **** 
  94:../gpio.c     **** int portG_write(int pin, enum digital val)
  95:../gpio.c     **** {
 2053              		.loc 1 95 0
 2054              		.cfi_startproc
 2055              		@ Function supports interworking.
 2056              		@ args = 0, pretend = 0, frame = 16
 2057              		@ frame_needed = 1, uses_anonymous_args = 0
 2058 0318 0DC0A0E1 		mov	ip, sp
 2059              	.LCFI8:
 2060              		.cfi_def_cfa_register 12
 2061 031c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2062 0320 04B04CE2 		sub	fp, ip, #4
 2063              		.cfi_offset 14, -8
 2064              		.cfi_offset 13, -12
 2065              		.cfi_offset 11, -16
 2066              	.LCFI9:
 2067              		.cfi_def_cfa 11, 4
 2068 0324 10D04DE2 		sub	sp, sp, #16
 2069 0328 18000BE5 		str	r0, [fp, #-24]
 2070 032c 0130A0E1 		mov	r3, r1
 2071 0330 19304BE5 		strb	r3, [fp, #-25]
  96:../gpio.c     **** 	int pos = pin*2;
 2072              		.loc 1 96 0
 2073 0334 18301BE5 		ldr	r3, [fp, #-24]
 2074 0338 8330A0E1 		mov	r3, r3, asl #1
 2075 033c 10300BE5 		str	r3, [fp, #-16]
  97:../gpio.c     **** 
  98:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2076              		.loc 1 98 0
 2077 0340 18301BE5 		ldr	r3, [fp, #-24]
 2078 0344 000053E3 		cmp	r3, #0
 2079 0348 020000BA 		blt	.L34
 2080              		.loc 1 98 0 is_stmt 0 discriminator 1
 2081 034c 18301BE5 		ldr	r3, [fp, #-24]
 2082 0350 070053E3 		cmp	r3, #7
 2083 0354 010000DA 		ble	.L35
 2084              	.L34:
  99:../gpio.c     **** 		return -1; // indica error
 2085              		.loc 1 99 0 is_stmt 1
 2086 0358 0030E0E3 		mvn	r3, #0
 2087 035c 280000EA 		b	.L36
 2088              	.L35:
 100:../gpio.c     **** 
 101:../gpio.c     **** 	if (val < 0 || val > 1)
 2089              		.loc 1 101 0
 2090 0360 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2091 0364 010053E3 		cmp	r3, #1
 2092 0368 0100009A 		bls	.L37
 102:../gpio.c     **** 		return -1; // indica error
 2093              		.loc 1 102 0
 2094 036c 0030E0E3 		mvn	r3, #0
 2095 0370 230000EA 		b	.L36
 2096              	.L37:
 103:../gpio.c     **** 
 104:../gpio.c     **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2097              		.loc 1 104 0
 2098 0374 98309FE5 		ldr	r3, .L41
 2099 0378 002093E5 		ldr	r2, [r3, #0]
 2100 037c 0310A0E3 		mov	r1, #3
 2101 0380 10301BE5 		ldr	r3, [fp, #-16]
 2102 0384 1133A0E1 		mov	r3, r1, asl r3
 2103 0388 032002E0 		and	r2, r2, r3
 2104 038c 0110A0E3 		mov	r1, #1
 2105 0390 10301BE5 		ldr	r3, [fp, #-16]
 2106 0394 1133A0E1 		mov	r3, r1, asl r3
 2107 0398 030052E1 		cmp	r2, r3
 2108 039c 0100000A 		beq	.L38
 105:../gpio.c     **** 		return -1; // indica error
 2109              		.loc 1 105 0
 2110 03a0 0030E0E3 		mvn	r3, #0
 2111 03a4 160000EA 		b	.L36
 2112              	.L38:
 106:../gpio.c     **** 
 107:../gpio.c     **** 	if (val)
 2113              		.loc 1 107 0
 2114 03a8 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2115 03ac 000053E3 		cmp	r3, #0
 2116 03b0 0900000A 		beq	.L39
 108:../gpio.c     **** 		rPDATG|= ~(0x1<<pin);
 2117              		.loc 1 108 0
 2118 03b4 5C309FE5 		ldr	r3, .L41+4
 2119 03b8 58209FE5 		ldr	r2, .L41+4
 2120 03bc 001092E5 		ldr	r1, [r2, #0]
 2121 03c0 0100A0E3 		mov	r0, #1
 2122 03c4 18201BE5 		ldr	r2, [fp, #-24]
 2123 03c8 1022A0E1 		mov	r2, r0, asl r2
 2124 03cc 0220E0E1 		mvn	r2, r2
 2125 03d0 022081E1 		orr	r2, r1, r2
 2126 03d4 002083E5 		str	r2, [r3, #0]
 2127 03d8 080000EA 		b	.L40
 2128              	.L39:
 109:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 1
 110:../gpio.c     **** 	else
 111:../gpio.c     **** 		rPDATG &= ~(0x1<<pin);
 2129              		.loc 1 111 0
 2130 03dc 34309FE5 		ldr	r3, .L41+4
 2131 03e0 30209FE5 		ldr	r2, .L41+4
 2132 03e4 001092E5 		ldr	r1, [r2, #0]
 2133 03e8 0100A0E3 		mov	r0, #1
 2134 03ec 18201BE5 		ldr	r2, [fp, #-24]
 2135 03f0 1022A0E1 		mov	r2, r0, asl r2
 2136 03f4 0220E0E1 		mvn	r2, r2
 2137 03f8 022001E0 		and	r2, r1, r2
 2138 03fc 002083E5 		str	r2, [r3, #0]
 2139              	.L40:
 112:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 0
 113:../gpio.c     **** 
 114:../gpio.c     **** 	return 0;
 2140              		.loc 1 114 0
 2141 0400 0030A0E3 		mov	r3, #0
 2142              	.L36:
 115:../gpio.c     **** }
 2143              		.loc 1 115 0
 2144 0404 0300A0E1 		mov	r0, r3
 2145 0408 0CD04BE2 		sub	sp, fp, #12
 2146 040c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2147 0410 1EFF2FE1 		bx	lr
 2148              	.L42:
 2149              		.align	2
 2150              	.L41:
 2151 0414 4000D201 		.word	30539840
 2152 0418 4400D201 		.word	30539844
 2153              		.cfi_endproc
 2154              	.LFE4:
 2156              		.align	2
 2157              		.global	portG_read
 2159              	portG_read:
 2160              	.LFB5:
 116:../gpio.c     **** 
 117:../gpio.c     **** int portG_read(int pin, enum digital* val)
 118:../gpio.c     **** {
 2161              		.loc 1 118 0
 2162              		.cfi_startproc
 2163              		@ Function supports interworking.
 2164              		@ args = 0, pretend = 0, frame = 16
 2165              		@ frame_needed = 1, uses_anonymous_args = 0
 2166 041c 0DC0A0E1 		mov	ip, sp
 2167              	.LCFI10:
 2168              		.cfi_def_cfa_register 12
 2169 0420 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2170 0424 04B04CE2 		sub	fp, ip, #4
 2171              		.cfi_offset 14, -8
 2172              		.cfi_offset 13, -12
 2173              		.cfi_offset 11, -16
 2174              	.LCFI11:
 2175              		.cfi_def_cfa 11, 4
 2176 0428 10D04DE2 		sub	sp, sp, #16
 2177 042c 18000BE5 		str	r0, [fp, #-24]
 2178 0430 1C100BE5 		str	r1, [fp, #-28]
 119:../gpio.c     **** 	int pos = pin*2;
 2179              		.loc 1 119 0
 2180 0434 18301BE5 		ldr	r3, [fp, #-24]
 2181 0438 8330A0E1 		mov	r3, r3, asl #1
 2182 043c 10300BE5 		str	r3, [fp, #-16]
 120:../gpio.c     **** 
 121:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2183              		.loc 1 121 0
 2184 0440 18301BE5 		ldr	r3, [fp, #-24]
 2185 0444 000053E3 		cmp	r3, #0
 2186 0448 020000BA 		blt	.L44
 2187              		.loc 1 121 0 is_stmt 0 discriminator 1
 2188 044c 18301BE5 		ldr	r3, [fp, #-24]
 2189 0450 070053E3 		cmp	r3, #7
 2190 0454 010000DA 		ble	.L45
 2191              	.L44:
 122:../gpio.c     **** 		return -1; // indica error
 2192              		.loc 1 122 0 is_stmt 1
 2193 0458 0030E0E3 		mvn	r3, #0
 2194 045c 190000EA 		b	.L46
 2195              	.L45:
 123:../gpio.c     **** 
 124:../gpio.c     **** 	if (rPCONG & (0x3 << pos))
 2196              		.loc 1 124 0
 2197 0460 70309FE5 		ldr	r3, .L50
 2198 0464 002093E5 		ldr	r2, [r3, #0]
 2199 0468 0310A0E3 		mov	r1, #3
 2200 046c 10301BE5 		ldr	r3, [fp, #-16]
 2201 0470 1133A0E1 		mov	r3, r1, asl r3
 2202 0474 033002E0 		and	r3, r2, r3
 2203 0478 000053E3 		cmp	r3, #0
 2204 047c 0100000A 		beq	.L47
 125:../gpio.c     **** 		return -1; // indica error
 2205              		.loc 1 125 0
 2206 0480 0030E0E3 		mvn	r3, #0
 2207 0484 0F0000EA 		b	.L46
 2208              	.L47:
 126:../gpio.c     **** 
 127:../gpio.c     **** 	if((rPDATG & (0x1 << pin)))
 2209              		.loc 1 127 0
 2210 0488 4C309FE5 		ldr	r3, .L50+4
 2211 048c 002093E5 		ldr	r2, [r3, #0]
 2212 0490 0110A0E3 		mov	r1, #1
 2213 0494 18301BE5 		ldr	r3, [fp, #-24]
 2214 0498 1133A0E1 		mov	r3, r1, asl r3
 2215 049c 033002E0 		and	r3, r2, r3
 2216 04a0 000053E3 		cmp	r3, #0
 2217 04a4 0300000A 		beq	.L48
 128:../gpio.c     **** 		*val = HIGH;
 2218              		.loc 1 128 0
 2219 04a8 1C301BE5 		ldr	r3, [fp, #-28]
 2220 04ac 0120A0E3 		mov	r2, #1
 2221 04b0 0020C3E5 		strb	r2, [r3, #0]
 2222 04b4 020000EA 		b	.L49
 2223              	.L48:
 129:../gpio.c     **** 	else
 130:../gpio.c     **** 		*val = LOW;
 2224              		.loc 1 130 0
 2225 04b8 1C301BE5 		ldr	r3, [fp, #-28]
 2226 04bc 0020A0E3 		mov	r2, #0
 2227 04c0 0020C3E5 		strb	r2, [r3, #0]
 2228              	.L49:
 131:../gpio.c     **** 
 132:../gpio.c     **** 	return 0;
 2229              		.loc 1 132 0
 2230 04c4 0030A0E3 		mov	r3, #0
 2231              	.L46:
 133:../gpio.c     **** }
 2232              		.loc 1 133 0
 2233 04c8 0300A0E1 		mov	r0, r3
 2234 04cc 0CD04BE2 		sub	sp, fp, #12
 2235 04d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2236 04d4 1EFF2FE1 		bx	lr
 2237              	.L51:
 2238              		.align	2
 2239              	.L50:
 2240 04d8 4000D201 		.word	30539840
 2241 04dc 4400D201 		.word	30539844
 2242              		.cfi_endproc
 2243              	.LFE5:
 2245              		.align	2
 2246              		.global	portG_conf_pup
 2248              	portG_conf_pup:
 2249              	.LFB6:
 134:../gpio.c     **** 
 135:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 136:../gpio.c     **** {
 2250              		.loc 1 136 0
 2251              		.cfi_startproc
 2252              		@ Function supports interworking.
 2253              		@ args = 0, pretend = 0, frame = 8
 2254              		@ frame_needed = 1, uses_anonymous_args = 0
 2255 04e0 0DC0A0E1 		mov	ip, sp
 2256              	.LCFI12:
 2257              		.cfi_def_cfa_register 12
 2258 04e4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2259 04e8 04B04CE2 		sub	fp, ip, #4
 2260              		.cfi_offset 14, -8
 2261              		.cfi_offset 13, -12
 2262              		.cfi_offset 11, -16
 2263              	.LCFI13:
 2264              		.cfi_def_cfa 11, 4
 2265 04ec 08D04DE2 		sub	sp, sp, #8
 2266 04f0 10000BE5 		str	r0, [fp, #-16]
 2267 04f4 0130A0E1 		mov	r3, r1
 2268 04f8 11304BE5 		strb	r3, [fp, #-17]
 137:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2269              		.loc 1 137 0
 2270 04fc 10301BE5 		ldr	r3, [fp, #-16]
 2271 0500 000053E3 		cmp	r3, #0
 2272 0504 020000BA 		blt	.L53
 2273              		.loc 1 137 0 is_stmt 0 discriminator 1
 2274 0508 10301BE5 		ldr	r3, [fp, #-16]
 2275 050c 070053E3 		cmp	r3, #7
 2276 0510 010000DA 		ble	.L54
 2277              	.L53:
 138:../gpio.c     **** 		return -1; // indica error
 2278              		.loc 1 138 0 is_stmt 1
 2279 0514 0030E0E3 		mvn	r3, #0
 2280 0518 1D0000EA 		b	.L55
 2281              	.L54:
 139:../gpio.c     **** 
 140:../gpio.c     **** 	if (st != ENABLE && st != DISABLE)
 2282              		.loc 1 140 0
 2283 051c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2284 0520 010053E3 		cmp	r3, #1
 2285 0524 0400000A 		beq	.L56
 2286              		.loc 1 140 0 is_stmt 0 discriminator 1
 2287 0528 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2288 052c 000053E3 		cmp	r3, #0
 2289 0530 0100000A 		beq	.L56
 141:../gpio.c     **** 		return -1; // indica error
 2290              		.loc 1 141 0 is_stmt 1
 2291 0534 0030E0E3 		mvn	r3, #0
 2292 0538 150000EA 		b	.L55
 2293              	.L56:
 142:../gpio.c     **** 
 143:../gpio.c     **** 	if (st == ENABLE)
 2294              		.loc 1 143 0
 2295 053c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2296 0540 010053E3 		cmp	r3, #1
 2297 0544 0900001A 		bne	.L57
 144:../gpio.c     **** 		rPUPG &= ~(0x1 << pin);
 2298              		.loc 1 144 0
 2299 0548 54309FE5 		ldr	r3, .L59
 2300 054c 50209FE5 		ldr	r2, .L59
 2301 0550 001092E5 		ldr	r1, [r2, #0]
 2302 0554 0100A0E3 		mov	r0, #1
 2303 0558 10201BE5 		ldr	r2, [fp, #-16]
 2304 055c 1022A0E1 		mov	r2, r0, asl r2
 2305 0560 0220E0E1 		mvn	r2, r2
 2306 0564 022001E0 		and	r2, r1, r2
 2307 0568 002083E5 		str	r2, [r3, #0]
 2308 056c 070000EA 		b	.L58
 2309              	.L57:
 145:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 146:../gpio.c     **** 		// para activar la resistencia de pull-up
 147:../gpio.c     **** 	else
 148:../gpio.c     **** 		rPUPG |= (0x1 << pin);
 2310              		.loc 1 148 0
 2311 0570 2C309FE5 		ldr	r3, .L59
 2312 0574 28209FE5 		ldr	r2, .L59
 2313 0578 001092E5 		ldr	r1, [r2, #0]
 2314 057c 0100A0E3 		mov	r0, #1
 2315 0580 10201BE5 		ldr	r2, [fp, #-16]
 2316 0584 1022A0E1 		mov	r2, r0, asl r2
 2317 0588 022081E1 		orr	r2, r1, r2
 2318 058c 002083E5 		str	r2, [r3, #0]
 2319              	.L58:
 149:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 150:../gpio.c     **** 		// para desactivar la resistencia de pull-up
 151:../gpio.c     **** 
 152:../gpio.c     **** 	return 0;
 2320              		.loc 1 152 0
 2321 0590 0030A0E3 		mov	r3, #0
 2322              	.L55:
 153:../gpio.c     **** }
 2323              		.loc 1 153 0
 2324 0594 0300A0E1 		mov	r0, r3
 2325 0598 0CD04BE2 		sub	sp, fp, #12
 2326 059c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2327 05a0 1EFF2FE1 		bx	lr
 2328              	.L60:
 2329              		.align	2
 2330              	.L59:
 2331 05a4 4800D201 		.word	30539848
 2332              		.cfi_endproc
 2333              	.LFE6:
 2335              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1698   .text:00000000 $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1701   .text:00000000 portB_conf
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1784   .text:000000c4 $d
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1788   .text:000000c8 $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1791   .text:000000c8 portB_write
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1870   .text:00000180 $d
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1874   .text:00000184 $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1877   .text:00000184 portG_conf
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1921   .text:000001dc $d
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:1927   .text:000001ec $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2010   .text:000002e4 $d
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2014   .text:000002e8 $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2017   .text:000002e8 portG_eint_trig
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2051   .text:00000318 portG_write
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2151   .text:00000414 $d
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2156   .text:0000041c $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2159   .text:0000041c portG_read
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2240   .text:000004d8 $d
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2245   .text:000004e0 $a
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2248   .text:000004e0 portG_conf_pup
C:\Users\ignac\AppData\Local\Temp\ccej9Hd1.s:2331   .text:000005a4 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
